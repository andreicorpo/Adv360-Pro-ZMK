#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt { flavor = "tap-preferred"; };

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        cmd_bksp: cmd_bksp {
            compatible = "zmk,behavior-mod-morph";
            label = "CMD_BKSP";
            bindings = <&mt RIGHT_COMMAND BACKSPACE>, <&kp BSPC>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_1: cstm_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "1 => & or |";
            bindings = <&kp AMPS>, <&kp PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_2: cstm_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "2 => ( or @";
            bindings = <&kp LPAR>, <&kp AT>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_3: cstm_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_3";
            bindings = <&kp LEFT_BRACE>, <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_4: cstm_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_4";
            bindings = <&kp LBKT>, <&kp DLLR>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_5: cstm_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_5";
            bindings = <&kp EQUAL>, <&kp PRCNT>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_6: cstm_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_6";
            bindings = <&kp MINUS>, <&kp PLUS>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_7: cstm_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_7";
            bindings = <&kp RIGHT_BRACKET>, <&kp AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_8: cstm_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_8";
            bindings = <&kp RBRC>, <&kp ASTRK>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_9: cstm_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_9";
            bindings = <&kp RPAR>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_0: cstm_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_0";
            bindings = <&kp PLUS>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_lbrkt: cstm_lbrkt {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_LBRKT";
            bindings = <&kp DQT>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_rbrkt: cstm_rbrkt {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_RBRKT";
            bindings = <&kp QMARK>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_slsh: cstm_slsh {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_SLSH";
            bindings = <&mt LG(LA(LEFT_SHIFT)) SLASH>, <&kp BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        cstm_semi: cstm_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "CSTM_SEMI";
            bindings = <&kp COLON>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL                     &cstm_1  &cstm_2      &cstm_3   &cstm_4    &cstm_5  &mo 3                                                                                                         &mo 3             &cstm_6  &cstm_7         &cstm_8    &cstm_9      &cstm_0     &kp MINUS
&kp TAB                       &kp Q    &kp W        &kp E     &kp R      &kp T    &none                                                                                                         &none             &kp Y    &kp U           &kp I      &kp O        &kp P       &kp BSLH
&mt LCTRL ESC                 &kp A    &kp S        &lt 1 D   &kp F      &kp G    &none                &mt LCMD TAB      &mt LCTRL DELETE            &mt LG(BACKSPACE) ENTER     &cmd_bksp      &none             &kp H    &kp J           &kp K      &kp L        &cstm_semi  &kp SQT
&mt LA(LEFT_SHIFT) SEMICOLON  &kp Z    &kp X        &kp C     &kp V      &kp B                                           &kp HOME                    &kp PG_UP                                                    &kp N    &kp M           &kp COMMA  &kp DOT      &cstm_slsh  &kp RSHFT
&mo 2                         &kp F11  &cstm_lbrkt  &kp LEFT  &kp RIGHT           &mt LCTRL BACKSPACE  &mt LSHIFT SPACE  &kp LA(LC(LEFT_SHIFT))      &kp LA(LC(LG(LEFT_SHIFT)))  &mt LCTRL ESC  &mt RSHIFT ENTER           &kp DOWN_ARROW  &kp UP     &cstm_rbrkt  &kp F12     &mo 2
            >;
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none      &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none      &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                     &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &trans      &trans        &kp KP_DOT     &trans           &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
